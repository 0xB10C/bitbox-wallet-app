// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages/hww.proto

/*
Package messages is a generated protocol buffer package.

It is generated from these files:
	messages/hww.proto

It has these top-level messages:
	Error
	Success
	RandomNumberResponse
	RandomNumberRequest
	DeviceInfoRequest
	DeviceInfoResponse
	SetDeviceNameRequest
	SetDeviceTimeRequest
	SetDeviceLanguageRequest
	SetPasswordRequest
	CreateBackupRequest
	ShowMnemonicRequest
	Request
	Response
*/
package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Error struct {
	Code    int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Success struct {
}

func (m *Success) Reset()                    { *m = Success{} }
func (m *Success) String() string            { return proto.CompactTextString(m) }
func (*Success) ProtoMessage()               {}
func (*Success) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type RandomNumberResponse struct {
	Number []byte `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (m *RandomNumberResponse) Reset()                    { *m = RandomNumberResponse{} }
func (m *RandomNumberResponse) String() string            { return proto.CompactTextString(m) }
func (*RandomNumberResponse) ProtoMessage()               {}
func (*RandomNumberResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RandomNumberResponse) GetNumber() []byte {
	if m != nil {
		return m.Number
	}
	return nil
}

type RandomNumberRequest struct {
}

func (m *RandomNumberRequest) Reset()                    { *m = RandomNumberRequest{} }
func (m *RandomNumberRequest) String() string            { return proto.CompactTextString(m) }
func (*RandomNumberRequest) ProtoMessage()               {}
func (*RandomNumberRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type DeviceInfoRequest struct {
}

func (m *DeviceInfoRequest) Reset()                    { *m = DeviceInfoRequest{} }
func (m *DeviceInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*DeviceInfoRequest) ProtoMessage()               {}
func (*DeviceInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type DeviceInfoResponse struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Initialized bool   `protobuf:"varint,2,opt,name=initialized" json:"initialized,omitempty"`
	Version     string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
}

func (m *DeviceInfoResponse) Reset()                    { *m = DeviceInfoResponse{} }
func (m *DeviceInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*DeviceInfoResponse) ProtoMessage()               {}
func (*DeviceInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DeviceInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeviceInfoResponse) GetInitialized() bool {
	if m != nil {
		return m.Initialized
	}
	return false
}

func (m *DeviceInfoResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type SetDeviceNameRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *SetDeviceNameRequest) Reset()                    { *m = SetDeviceNameRequest{} }
func (m *SetDeviceNameRequest) String() string            { return proto.CompactTextString(m) }
func (*SetDeviceNameRequest) ProtoMessage()               {}
func (*SetDeviceNameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SetDeviceNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SetDeviceTimeRequest struct {
	Time string `protobuf:"bytes,1,opt,name=time" json:"time,omitempty"`
}

func (m *SetDeviceTimeRequest) Reset()                    { *m = SetDeviceTimeRequest{} }
func (m *SetDeviceTimeRequest) String() string            { return proto.CompactTextString(m) }
func (*SetDeviceTimeRequest) ProtoMessage()               {}
func (*SetDeviceTimeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SetDeviceTimeRequest) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

type SetDeviceLanguageRequest struct {
	Language string `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
}

func (m *SetDeviceLanguageRequest) Reset()                    { *m = SetDeviceLanguageRequest{} }
func (m *SetDeviceLanguageRequest) String() string            { return proto.CompactTextString(m) }
func (*SetDeviceLanguageRequest) ProtoMessage()               {}
func (*SetDeviceLanguageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *SetDeviceLanguageRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type SetPasswordRequest struct {
}

func (m *SetPasswordRequest) Reset()                    { *m = SetPasswordRequest{} }
func (m *SetPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*SetPasswordRequest) ProtoMessage()               {}
func (*SetPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type CreateBackupRequest struct {
}

func (m *CreateBackupRequest) Reset()                    { *m = CreateBackupRequest{} }
func (m *CreateBackupRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateBackupRequest) ProtoMessage()               {}
func (*CreateBackupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type ShowMnemonicRequest struct {
}

func (m *ShowMnemonicRequest) Reset()                    { *m = ShowMnemonicRequest{} }
func (m *ShowMnemonicRequest) String() string            { return proto.CompactTextString(m) }
func (*ShowMnemonicRequest) ProtoMessage()               {}
func (*ShowMnemonicRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type Request struct {
	// Types that are valid to be assigned to Request:
	//	*Request_RandomNumber
	//	*Request_DeviceName
	//	*Request_DeviceTime
	//	*Request_DeviceLanguage
	//	*Request_DeviceInfo
	//	*Request_SetPassword
	//	*Request_CreateBackup
	//	*Request_ShowMnemonic
	Request isRequest_Request `protobuf_oneof:"request"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type isRequest_Request interface{ isRequest_Request() }

type Request_RandomNumber struct {
	RandomNumber *RandomNumberRequest `protobuf:"bytes,1,opt,name=random_number,json=randomNumber,oneof"`
}
type Request_DeviceName struct {
	DeviceName *SetDeviceNameRequest `protobuf:"bytes,2,opt,name=device_name,json=deviceName,oneof"`
}
type Request_DeviceTime struct {
	DeviceTime *SetDeviceTimeRequest `protobuf:"bytes,3,opt,name=device_time,json=deviceTime,oneof"`
}
type Request_DeviceLanguage struct {
	DeviceLanguage *SetDeviceLanguageRequest `protobuf:"bytes,4,opt,name=device_language,json=deviceLanguage,oneof"`
}
type Request_DeviceInfo struct {
	DeviceInfo *DeviceInfoRequest `protobuf:"bytes,5,opt,name=device_info,json=deviceInfo,oneof"`
}
type Request_SetPassword struct {
	SetPassword *SetPasswordRequest `protobuf:"bytes,6,opt,name=set_password,json=setPassword,oneof"`
}
type Request_CreateBackup struct {
	CreateBackup *CreateBackupRequest `protobuf:"bytes,7,opt,name=create_backup,json=createBackup,oneof"`
}
type Request_ShowMnemonic struct {
	ShowMnemonic *ShowMnemonicRequest `protobuf:"bytes,8,opt,name=show_mnemonic,json=showMnemonic,oneof"`
}

func (*Request_RandomNumber) isRequest_Request()   {}
func (*Request_DeviceName) isRequest_Request()     {}
func (*Request_DeviceTime) isRequest_Request()     {}
func (*Request_DeviceLanguage) isRequest_Request() {}
func (*Request_DeviceInfo) isRequest_Request()     {}
func (*Request_SetPassword) isRequest_Request()    {}
func (*Request_CreateBackup) isRequest_Request()   {}
func (*Request_ShowMnemonic) isRequest_Request()   {}

func (m *Request) GetRequest() isRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Request) GetRandomNumber() *RandomNumberRequest {
	if x, ok := m.GetRequest().(*Request_RandomNumber); ok {
		return x.RandomNumber
	}
	return nil
}

func (m *Request) GetDeviceName() *SetDeviceNameRequest {
	if x, ok := m.GetRequest().(*Request_DeviceName); ok {
		return x.DeviceName
	}
	return nil
}

func (m *Request) GetDeviceTime() *SetDeviceTimeRequest {
	if x, ok := m.GetRequest().(*Request_DeviceTime); ok {
		return x.DeviceTime
	}
	return nil
}

func (m *Request) GetDeviceLanguage() *SetDeviceLanguageRequest {
	if x, ok := m.GetRequest().(*Request_DeviceLanguage); ok {
		return x.DeviceLanguage
	}
	return nil
}

func (m *Request) GetDeviceInfo() *DeviceInfoRequest {
	if x, ok := m.GetRequest().(*Request_DeviceInfo); ok {
		return x.DeviceInfo
	}
	return nil
}

func (m *Request) GetSetPassword() *SetPasswordRequest {
	if x, ok := m.GetRequest().(*Request_SetPassword); ok {
		return x.SetPassword
	}
	return nil
}

func (m *Request) GetCreateBackup() *CreateBackupRequest {
	if x, ok := m.GetRequest().(*Request_CreateBackup); ok {
		return x.CreateBackup
	}
	return nil
}

func (m *Request) GetShowMnemonic() *ShowMnemonicRequest {
	if x, ok := m.GetRequest().(*Request_ShowMnemonic); ok {
		return x.ShowMnemonic
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_RandomNumber)(nil),
		(*Request_DeviceName)(nil),
		(*Request_DeviceTime)(nil),
		(*Request_DeviceLanguage)(nil),
		(*Request_DeviceInfo)(nil),
		(*Request_SetPassword)(nil),
		(*Request_CreateBackup)(nil),
		(*Request_ShowMnemonic)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// request
	switch x := m.Request.(type) {
	case *Request_RandomNumber:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RandomNumber); err != nil {
			return err
		}
	case *Request_DeviceName:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceName); err != nil {
			return err
		}
	case *Request_DeviceTime:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceTime); err != nil {
			return err
		}
	case *Request_DeviceLanguage:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceLanguage); err != nil {
			return err
		}
	case *Request_DeviceInfo:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceInfo); err != nil {
			return err
		}
	case *Request_SetPassword:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetPassword); err != nil {
			return err
		}
	case *Request_CreateBackup:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateBackup); err != nil {
			return err
		}
	case *Request_ShowMnemonic:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ShowMnemonic); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Request has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 1: // request.random_number
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RandomNumberRequest)
		err := b.DecodeMessage(msg)
		m.Request = &Request_RandomNumber{msg}
		return true, err
	case 2: // request.device_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SetDeviceNameRequest)
		err := b.DecodeMessage(msg)
		m.Request = &Request_DeviceName{msg}
		return true, err
	case 3: // request.device_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SetDeviceTimeRequest)
		err := b.DecodeMessage(msg)
		m.Request = &Request_DeviceTime{msg}
		return true, err
	case 4: // request.device_language
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SetDeviceLanguageRequest)
		err := b.DecodeMessage(msg)
		m.Request = &Request_DeviceLanguage{msg}
		return true, err
	case 5: // request.device_info
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeviceInfoRequest)
		err := b.DecodeMessage(msg)
		m.Request = &Request_DeviceInfo{msg}
		return true, err
	case 6: // request.set_password
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SetPasswordRequest)
		err := b.DecodeMessage(msg)
		m.Request = &Request_SetPassword{msg}
		return true, err
	case 7: // request.create_backup
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CreateBackupRequest)
		err := b.DecodeMessage(msg)
		m.Request = &Request_CreateBackup{msg}
		return true, err
	case 8: // request.show_mnemonic
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ShowMnemonicRequest)
		err := b.DecodeMessage(msg)
		m.Request = &Request_ShowMnemonic{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// request
	switch x := m.Request.(type) {
	case *Request_RandomNumber:
		s := proto.Size(x.RandomNumber)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_DeviceName:
		s := proto.Size(x.DeviceName)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_DeviceTime:
		s := proto.Size(x.DeviceTime)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_DeviceLanguage:
		s := proto.Size(x.DeviceLanguage)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_DeviceInfo:
		s := proto.Size(x.DeviceInfo)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_SetPassword:
		s := proto.Size(x.SetPassword)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_CreateBackup:
		s := proto.Size(x.CreateBackup)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ShowMnemonic:
		s := proto.Size(x.ShowMnemonic)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Response struct {
	// Types that are valid to be assigned to Response:
	//	*Response_Success
	//	*Response_Error
	//	*Response_RandomNumber
	//	*Response_DeviceInfo
	Response isResponse_Response `protobuf_oneof:"response"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type isResponse_Response interface{ isResponse_Response() }

type Response_Success struct {
	Success *Success `protobuf:"bytes,1,opt,name=success,oneof"`
}
type Response_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,oneof"`
}
type Response_RandomNumber struct {
	RandomNumber *RandomNumberResponse `protobuf:"bytes,3,opt,name=random_number,json=randomNumber,oneof"`
}
type Response_DeviceInfo struct {
	DeviceInfo *DeviceInfoResponse `protobuf:"bytes,4,opt,name=device_info,json=deviceInfo,oneof"`
}

func (*Response_Success) isResponse_Response()      {}
func (*Response_Error) isResponse_Response()        {}
func (*Response_RandomNumber) isResponse_Response() {}
func (*Response_DeviceInfo) isResponse_Response()   {}

func (m *Response) GetResponse() isResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *Response) GetSuccess() *Success {
	if x, ok := m.GetResponse().(*Response_Success); ok {
		return x.Success
	}
	return nil
}

func (m *Response) GetError() *Error {
	if x, ok := m.GetResponse().(*Response_Error); ok {
		return x.Error
	}
	return nil
}

func (m *Response) GetRandomNumber() *RandomNumberResponse {
	if x, ok := m.GetResponse().(*Response_RandomNumber); ok {
		return x.RandomNumber
	}
	return nil
}

func (m *Response) GetDeviceInfo() *DeviceInfoResponse {
	if x, ok := m.GetResponse().(*Response_DeviceInfo); ok {
		return x.DeviceInfo
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_Success)(nil),
		(*Response_Error)(nil),
		(*Response_RandomNumber)(nil),
		(*Response_DeviceInfo)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// response
	switch x := m.Response.(type) {
	case *Response_Success:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Success); err != nil {
			return err
		}
	case *Response_Error:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case *Response_RandomNumber:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RandomNumber); err != nil {
			return err
		}
	case *Response_DeviceInfo:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceInfo); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Response has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 1: // response.success
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Success)
		err := b.DecodeMessage(msg)
		m.Response = &Response_Success{msg}
		return true, err
	case 2: // response.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Error)
		err := b.DecodeMessage(msg)
		m.Response = &Response_Error{msg}
		return true, err
	case 3: // response.random_number
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RandomNumberResponse)
		err := b.DecodeMessage(msg)
		m.Response = &Response_RandomNumber{msg}
		return true, err
	case 4: // response.device_info
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeviceInfoResponse)
		err := b.DecodeMessage(msg)
		m.Response = &Response_DeviceInfo{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// response
	switch x := m.Response.(type) {
	case *Response_Success:
		s := proto.Size(x.Success)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Error:
		s := proto.Size(x.Error)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_RandomNumber:
		s := proto.Size(x.RandomNumber)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_DeviceInfo:
		s := proto.Size(x.DeviceInfo)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Error)(nil), "Error")
	proto.RegisterType((*Success)(nil), "Success")
	proto.RegisterType((*RandomNumberResponse)(nil), "RandomNumberResponse")
	proto.RegisterType((*RandomNumberRequest)(nil), "RandomNumberRequest")
	proto.RegisterType((*DeviceInfoRequest)(nil), "DeviceInfoRequest")
	proto.RegisterType((*DeviceInfoResponse)(nil), "DeviceInfoResponse")
	proto.RegisterType((*SetDeviceNameRequest)(nil), "SetDeviceNameRequest")
	proto.RegisterType((*SetDeviceTimeRequest)(nil), "SetDeviceTimeRequest")
	proto.RegisterType((*SetDeviceLanguageRequest)(nil), "SetDeviceLanguageRequest")
	proto.RegisterType((*SetPasswordRequest)(nil), "SetPasswordRequest")
	proto.RegisterType((*CreateBackupRequest)(nil), "CreateBackupRequest")
	proto.RegisterType((*ShowMnemonicRequest)(nil), "ShowMnemonicRequest")
	proto.RegisterType((*Request)(nil), "Request")
	proto.RegisterType((*Response)(nil), "Response")
}

func init() { proto.RegisterFile("messages/hww.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 535 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x4d, 0xb7, 0x1f, 0x49, 0xa7, 0x05, 0x84, 0xdb, 0xa2, 0xc0, 0x01, 0x55, 0x11, 0x87, 0x15,
	0x87, 0x20, 0x81, 0x76, 0xb5, 0x12, 0x9c, 0xca, 0x22, 0x05, 0x09, 0x56, 0xc8, 0xe5, 0x5e, 0xb9,
	0xc9, 0x6c, 0x6b, 0xb1, 0xb1, 0x8b, 0x9d, 0x6e, 0x25, 0x7e, 0x26, 0x3f, 0x86, 0x33, 0x8a, 0xe3,
	0xa4, 0xc9, 0x36, 0x7b, 0xf3, 0x3c, 0xcf, 0xf3, 0xd8, 0xef, 0x79, 0x06, 0x48, 0x8a, 0x5a, 0xb3,
	0x0d, 0xea, 0x77, 0xdb, 0xc3, 0x21, 0xdc, 0x29, 0x99, 0xc9, 0xe0, 0x02, 0xfa, 0x5f, 0x94, 0x92,
	0x8a, 0x10, 0xe8, 0xc5, 0x32, 0x41, 0xbf, 0x33, 0xef, 0x9c, 0xf7, 0xa9, 0x59, 0x13, 0x1f, 0x5c,
	0x4b, 0xf1, 0xcf, 0xe6, 0x9d, 0xf3, 0x21, 0x2d, 0xc3, 0x60, 0x08, 0xee, 0x72, 0x1f, 0xc7, 0xa8,
	0x75, 0x10, 0xc2, 0x94, 0x32, 0x91, 0xc8, 0xf4, 0x66, 0x9f, 0xae, 0x51, 0x51, 0xd4, 0x3b, 0x29,
	0x34, 0x92, 0x17, 0x30, 0x10, 0x06, 0x31, 0x47, 0x8e, 0xa9, 0x8d, 0x82, 0x19, 0x4c, 0x9a, 0xf9,
	0xbf, 0xf7, 0xa8, 0xb3, 0x60, 0x02, 0xcf, 0xaf, 0xf1, 0x9e, 0xc7, 0xf8, 0x55, 0xdc, 0xca, 0x12,
	0x4c, 0x80, 0xd4, 0x41, 0x7b, 0x32, 0x81, 0x9e, 0x60, 0x69, 0x71, 0xd5, 0x21, 0x35, 0x6b, 0x32,
	0x87, 0x11, 0x17, 0x3c, 0xe3, 0xec, 0x8e, 0xff, 0xc1, 0xc4, 0x5c, 0xd7, 0xa3, 0x75, 0x28, 0x7f,
	0xcc, 0x3d, 0x2a, 0xcd, 0xa5, 0xf0, 0xbb, 0xc5, 0x63, 0x6c, 0x18, 0xbc, 0x85, 0xe9, 0x12, 0xb3,
	0xa2, 0xd0, 0x0d, 0x4b, 0xd1, 0x56, 0x6f, 0xab, 0xd3, 0xc8, 0xfd, 0xc9, 0x1b, 0xb9, 0x19, 0x3f,
	0xe6, 0xe6, 0xeb, 0xe0, 0x12, 0xfc, 0x2a, 0xf7, 0x1b, 0x13, 0x9b, 0x3d, 0xdb, 0x54, 0xf9, 0xaf,
	0xc0, 0xbb, 0xb3, 0x90, 0xe5, 0x54, 0x71, 0x30, 0x05, 0xb2, 0xc4, 0xec, 0x07, 0xd3, 0xfa, 0x20,
	0x55, 0x52, 0x6a, 0x31, 0x83, 0xc9, 0x67, 0x85, 0x2c, 0xc3, 0x05, 0x8b, 0x7f, 0xed, 0x77, 0x35,
	0x78, 0xb9, 0x95, 0x87, 0xef, 0x02, 0x53, 0x29, 0x78, 0x5c, 0xc2, 0xff, 0xba, 0xe0, 0x96, 0xb5,
	0x3e, 0xc2, 0x13, 0x65, 0x14, 0x5f, 0xd5, 0x0c, 0x19, 0xbd, 0x9f, 0x86, 0x2d, 0x3e, 0x44, 0x0e,
	0x1d, 0xab, 0x1a, 0x4c, 0xae, 0x60, 0x94, 0x98, 0x17, 0xac, 0x8c, 0x16, 0x67, 0x86, 0x3a, 0x0b,
	0xdb, 0x04, 0x8b, 0x1c, 0x0a, 0x49, 0x05, 0xd6, 0x98, 0x46, 0x99, 0xee, 0x43, 0x66, 0x4d, 0xbe,
	0x23, 0x33, 0x07, 0xc9, 0x35, 0x3c, 0xb3, 0xcc, 0x4a, 0xa3, 0x9e, 0x61, 0xbf, 0x0c, 0x1f, 0x13,
	0x34, 0x72, 0xe8, 0xd3, 0xa4, 0xb1, 0x41, 0x2e, 0xaa, 0xfa, 0x5c, 0xdc, 0x4a, 0xbf, 0x6f, 0x4e,
	0x20, 0xe1, 0xc9, 0x2f, 0x3b, 0x16, 0xcf, 0x41, 0x72, 0x05, 0x63, 0x8d, 0xd9, 0x6a, 0x67, 0xe5,
	0xf7, 0x07, 0x86, 0x37, 0x09, 0x4f, 0x2d, 0x89, 0x1c, 0x3a, 0xd2, 0x47, 0x34, 0xd7, 0x39, 0x36,
	0x0e, 0xad, 0xd6, 0xc6, 0x22, 0xdf, 0xb5, 0x3a, 0xb7, 0xf8, 0x96, 0xeb, 0x1c, 0xd7, 0xe0, 0x9c,
	0xac, 0xb7, 0xf2, 0xb0, 0x4a, 0xad, 0x91, 0xbe, 0x67, 0xc9, 0x2d, 0xee, 0xe6, 0x64, 0x5d, 0x83,
	0x17, 0x43, 0x70, 0x95, 0x35, 0xfe, 0x6f, 0x07, 0xbc, 0xaa, 0x53, 0xde, 0x80, 0xab, 0x8b, 0x36,
	0xb5, 0x9e, 0x7b, 0xa1, 0x6d, 0xdb, 0xc8, 0xa1, 0xe5, 0x16, 0x79, 0x0d, 0x7d, 0xcc, 0x67, 0x80,
	0x35, 0x77, 0x10, 0x9a, 0x89, 0x10, 0x39, 0xb4, 0x80, 0xc9, 0xa7, 0x87, 0xff, 0xa7, 0xb4, 0xb2,
	0xad, 0xef, 0x4f, 0x3e, 0xd0, 0x65, 0xd3, 0x86, 0x9e, 0x95, 0xf3, 0xb4, 0xaf, 0x9b, 0x3e, 0x2c,
	0x00, 0x3c, 0x65, 0x77, 0xd6, 0x03, 0x33, 0xac, 0x3e, 0xfc, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x0a,
	0xbf, 0x29, 0x3c, 0xc2, 0x04, 0x00, 0x00,
}
